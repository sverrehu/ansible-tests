---
- name: Check if keystore exists
  ansible.builtin.stat:
    path: "{{ cert_and_keystore_check_keystore_path }}"
  register: keystore_stat

- name: Examine keystore...
  when: keystore_stat.stat.exists
  block:
    - name: Identify new certificate file
      community.crypto.x509_certificate_info:
        path: "{{ cert_and_keystore_check_cert_path }}"
      register: new_crt

    - name: Create temp file for the certificate in the keystore
      ansible.builtin.tempfile:
        suffix: .pem
      register: old_crt_file
      check_mode: false
      changed_when: false

    - name: Extract old certificate from PKCS#12 file
      community.crypto.openssl_pkcs12:
        action: parse
        src: "{{ cert_and_keystore_check_keystore_path }}"
        path: "{{ old_crt_file.path }}"
        passphrase: "{{ cert_and_keystore_check_keystore_storepass }}"
      check_mode: false
      changed_when: false

    - name: Identify old certificate file
      community.crypto.x509_certificate_info:
        path: "{{ old_crt_file.path }}"
      register: old_crt

    - name: Delete temp file
      ansible.builtin.file:
        path: "{{ old_crt_file.path }}"
        state: absent
      check_mode: false
      changed_when: false

    - name: Set whether keystore needs to be regenerated
      ansible.builtin.set_fact:
        regenerate_keystore_and_truststore: true
      when: (old_crt.fingerprints != new_crt.fingerprints) | bool
